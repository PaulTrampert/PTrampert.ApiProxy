# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test .NET Library

env:
  VERSION_FORMAT: ${{'${major}.${minor}.${patch}'}}

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
    outputs:
      version:
        description: "The calculated semantic version of the build"
        value: ${{jobs.build-test.outputs.version}}
      version_tag:
        description: "The value to use when tagging releases"
        value: ${{jobs.build-test.outputs.version_tag}}
jobs:
  build-test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.versioning.outputs.version}}
      version_tag: ${{steps.versioning.outputs.version_tag}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set Prerelease Pattern
      run: |
        echo "PRERELEASE_PATTERN=-${GITHUB_HEAD_REF:=$GITHUB_REF_NAME}-\${increment}" >> $GITHUB_ENV
      if: ${{env.GITHUB_REF_NAME != 'master'}}
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Calculate Version
      id: versioning
      uses: paulhatch/semantic-version@v5.0.0-beta
      with:
        version_format: ${{format('{0}{1}', env.VERSION_FORMAT, env.PRERELEASE_PATTERN)}}
        
    - name: Restore dependencies
      run: dotnet restore ${{inputs.project_name}}.sln
      
    - name: Test
      run: dotnet test ${{inputs.project_name}}.Test/${{inputs.project_name}}.Test.csproj
      
    - name: Pack
      run: dotnet pack ${{inputs.project_name}}/${{inputs.project_name}}.csproj -c Release -o package --include-source /p:Version=$VERSION
      env:
        VERSION: ${{steps.versioning.outputs.version}}
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: package
        path: |
          package/*.nupkg
          package/*.snupkg
    
    
